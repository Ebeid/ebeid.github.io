<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ebeid ElSayed</title>
    <link>https://ebeid.github.io/</link>
    <description>Recent content on Ebeid ElSayed</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 02 Oct 2016 22:55:05 -0400</lastBuildDate>
    
	<atom:link href="https://ebeid.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Twelve-Factor Applications</title>
      <link>https://ebeid.github.io/blog/twelve-factor-applications/</link>
      <pubDate>Fri, 04 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ebeid.github.io/blog/twelve-factor-applications/</guid>
      <description>This post is just my notes about Twelve-Factor Applications. You can consider it my extended version of the original website.
&amp;ldquo;Twelve-factor applications&amp;rdquo; is a methodology that focus mainly on developing software-as-a-service applications (or SAAS for short). Although that&amp;rsquo;s was the main concern, factors in this methodology can be used or inspire engineering practices in other types of software development.
Facor 1 - Codebase One codebase tracked in revision control, many deploys.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://ebeid.github.io/projects/</link>
      <pubDate>Sun, 02 Oct 2016 22:55:05 -0400</pubDate>
      
      <guid>https://ebeid.github.io/projects/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Project Euler - Problem 1 - Multiples of 3 and 5</title>
      <link>https://ebeid.github.io/blog/2016-09-29-project-euler-proplem1/</link>
      <pubDate>Sun, 29 May 2016 15:58:38 -0700</pubDate>
      
      <guid>https://ebeid.github.io/blog/2016-09-29-project-euler-proplem1/</guid>
      <description>As part of my effort to refresh my memory in the areas of algorithms, data structures and mathematics, I&amp;rsquo;m going to use problems from Project Euler. Now, let&amp;rsquo;s get to problem 1.
/* Project Euler - Problem 1 - Multiples of 3 and 5 [ https://projecteuler.net/problem=1 ] If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.</description>
    </item>
    
    <item>
      <title>Syntax Modification using Microsoft Roslyn</title>
      <link>https://ebeid.github.io/blog/2013-08-23-getting-started-with-microsoft-roslyn_9468.html/</link>
      <pubDate>Fri, 23 Aug 2013 17:56:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-08-23-getting-started-with-microsoft-roslyn_9468.html/</guid>
      <description>In the previous two posts we just used the analysis capabilities of Microsoft Roslyn. In other words, we only get information about the code under inspection, we never changed it. In this post we going to change the code through Roslyn.
Before we start we need to highlight that data structures that represent code under inspection in Roslyn APIs are immutable. This means that it cannot be changed after they are created (in order to safely share them between tools).</description>
    </item>
    
    <item>
      <title>Semantic Analysis using Microsoft Roslyn</title>
      <link>https://ebeid.github.io/blog/2013-08-22-getting-started-with-microsoft-roslyn_22.html/</link>
      <pubDate>Thu, 22 Aug 2013 13:11:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-08-22-getting-started-with-microsoft-roslyn_22.html/</guid>
      <description>In a previous post we talked about using Microsoft Rosyln Syntax API to deal with syntax text in terms of SyntaxTrees and SyntaxNodes. But as we we all know, a single source code or code snippet can’t make a useful program. 99% of the time we end up with many source code files that depend on so many externals: assembly references, namespace imports, or other code files. The meaning (semantic) of SyntaxNodes depend heavily on these externals and may change due changes in these externals even if its enclosing source code file have not been changed.</description>
    </item>
    
    <item>
      <title>Syntax Analysis using Microsoft Roslyn</title>
      <link>https://ebeid.github.io/blog/2013-08-20-getting-started-with-microsoft-roslyn/</link>
      <pubDate>Tue, 20 Aug 2013 15:49:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-08-20-getting-started-with-microsoft-roslyn/</guid>
      <description>In a previous post we talked about Microsoft Roslyn. In this post will get our hands dirty with Roslyn syntax analysis in order to develop our first code-focused program. We will see how the SyntaxTree of HelloWorld program look like and how we can traverse and query it.
The Syntax API exposes the syntax trees the compilers use to understand Visual Basic and C# programs. They are produced by the same parser that runs when a project is built or a developer hits F5.</description>
    </item>
    
    <item>
      <title>Overview of Microsoft Roslyn – The first compiler-as-service product</title>
      <link>https://ebeid.github.io/blog/2013-08-19-overview-of-microsoft-roslyn-first.html/</link>
      <pubDate>Mon, 19 Aug 2013 21:00:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-08-19-overview-of-microsoft-roslyn-first.html/</guid>
      <description>Introduction From developer perspective, compilers are black boxes &amp;ndash; source code goes in one end, magic happens in the middle, and object files or assemblies come out the other end. During their job, compilers build up a deep understanding of our code. For decades this valuable information was unreachable.
The Roslyn project aims to open compilers for developers and offer it as services. Through Roslyn, compilers become services with APIs that can be used for code related tasks in your tools and applications.</description>
    </item>
    
    <item>
      <title>How to debug your Pex parameterized unit tests</title>
      <link>https://ebeid.github.io/blog/2013-08-13-how-to-debug-your-pex-parameterized.html/</link>
      <pubDate>Tue, 13 Aug 2013 13:43:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-08-13-how-to-debug-your-pex-parameterized.html/</guid>
      <description>We talked before about Microsoft Pex, and how it choose the shown inputs. We then talked more about building blocks of parameterized unit tests and its patterns.
What we missed till now is how to debug your parameterized unit tests. In order to debug your parameterized unit tests, do the following:
 Go to Tools &amp;gt;&amp;gt; Options &amp;gt;&amp;gt; Pex &amp;gt;&amp;gt; Diagnostic. Change the BreakOnStart option to True.  
 Now set a break point at any line of code inside your parameterized unit test.</description>
    </item>
    
    <item>
      <title>Convert Microsoft Pex path conditions from Z3 native format to SMT-LIB</title>
      <link>https://ebeid.github.io/blog/2013-08-01-convert-microsoft-pex-path-conditions.html/</link>
      <pubDate>Thu, 01 Aug 2013 16:24:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-08-01-convert-microsoft-pex-path-conditions.html/</guid>
      <description>We talked before about getting the code path conditions from Microsoft Pex as in Z3 native format(.z3 file).
Sometimes you may need to convert from Z3 native format to SMT-LIB standard. You can do that using the Z3 C# APIs. The only trick here is: you have to use the Microsoft.Z3.dll that come with your current Microsoft Pex installation (C:\Program Files\Microsoft Pex\bin\Microsoft.Z3.dll).
To show how it works, let’s create a new C# console application.</description>
    </item>
    
    <item>
      <title>The Z3 Constraint Solver, a developer perspective</title>
      <link>https://ebeid.github.io/blog/2013-07-30-the-z3-constraint-solver-developer.html/</link>
      <pubDate>Tue, 30 Jul 2013 06:30:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-30-the-z3-constraint-solver-developer.html/</guid>
      <description>Z3 is a high-performance SMT solver developed at Microsoft Research. It have been integrated with many many tools that came out from Microsoft for program analysis, testing, and verification.
What SAT means ? SAT refers to Boolean satisfiability problem where we want to determine if there exists an interpretation that satisfies a given Boolean formula. In other words, it establishes if the variables of a given Boolean formula can be assigned in such a way as to make the formula evaluate to true.</description>
    </item>
    
    <item>
      <title>Get path conditions from Microsoft Pex</title>
      <link>https://ebeid.github.io/blog/2013-07-24-get-path-conditions-from-microsoft-pex.html/</link>
      <pubDate>Wed, 24 Jul 2013 17:26:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-24-get-path-conditions-from-microsoft-pex.html/</guid>
      <description>We talked in a previous post about Microsoft Pex and how it choose values to explore your code through symbolically executing it and getting all its paths. A code path is the represented by all the conditions that have to be satisfied in order to make the code execution go to this path. Your code conditional statements will lead to different paths according to different input values. Test cases generated by Pex represents the code behavior for specific input values that lead to specific code path.</description>
    </item>
    
    <item>
      <title>Bring “Sign in as Different User” back to SharePoint 2013</title>
      <link>https://ebeid.github.io/blog/2013-07-23-bring-sign-in-as-different-user-back-to.html/</link>
      <pubDate>Tue, 23 Jul 2013 17:36:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-23-bring-sign-in-as-different-user-back-to.html/</guid>
      <description>If you new to SharePoint 2013 like me and get confused looking for “Sign in as a Different User” menu command, don’t worry it is not there by design but we can easily bring it back.
Do the following steps to get the link back:
 Locate the file \15\TEMPLATE\CONTROLTEMPLATES\Welcome.ascx and open it for editing. Add the following snippet before the existing element that have id of “ID_RequestAccess”.   Text=&amp;quot;&amp;lt;%$Resources:wss,personalactions_loginasdifferentuser%&amp;gt;&amp;quot; Description=&amp;quot;&amp;lt;%$Resources:wss,personalactions_loginasdifferentuserdescription%&amp;gt;&amp;quot; MenuGroupId=&amp;quot;100&amp;quot; Sequence=&amp;quot;100&amp;quot; UseShortId=&amp;quot;true&amp;quot; /&amp;gt;  Save and close the file.</description>
    </item>
    
    <item>
      <title>Create a new Web Part Page with Quick Launch menu</title>
      <link>https://ebeid.github.io/blog/2013-07-17-create-new-web-part-page-with-quick.html/</link>
      <pubDate>Wed, 17 Jul 2013 10:20:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-17-create-new-web-part-page-with-quick.html/</guid>
      <description>This post is about a simple task we do daily in SharePoint 2010, creating a new Web Part page. Every time we need a new Web Part page, we go to All Site Content &amp;gt; Create &amp;gt; Web Part Page &amp;gt; Create. Now we have a Web Part page but no quick launch menu on the left.
To show the quick launch menu on the new created page:
 Open the page for editing in SharePoint 2010.</description>
    </item>
    
    <item>
      <title>Getting Started with MongoDB – Part 2</title>
      <link>https://ebeid.github.io/blog/2013-07-12-getting-started-with-mongodb-part-2.html/</link>
      <pubDate>Fri, 12 Jul 2013 17:15:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-12-getting-started-with-mongodb-part-2.html/</guid>
      <description>In the previous post we explored the basics of MongoDB. In this post we going to dig deeper in MongoDB.
Indexing Whenever a new collection is created, MongoDB automatically creates an index by the _id field. These indexes can be found in the system.indexes collection. You can show all indexes in the database using db.system.indexes.find() . Most queries will include more fields than just the _id, so we need to make indexes on those fields.</description>
    </item>
    
    <item>
      <title>Getting Started with MongoDB – Part 1</title>
      <link>https://ebeid.github.io/blog/2013-07-12-getting-started-with-mongodb-part-1.html/</link>
      <pubDate>Fri, 12 Jul 2013 13:46:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-12-getting-started-with-mongodb-part-1.html/</guid>
      <description>MongoDB (from &amp;ldquo;humongous&amp;rdquo;) is an open source document-oriented database system developed and supported by 10gen (founded by Dwight Merriman). First publicly released in 2009, and since then it have been a rising star in the NoSQL world. MongoDB stores structured data as JSON-like documents with dynamic schemas (technically data is stored in a binary form of JSON known as BSON), making the integration of data in certain types of applications easier and faster.</description>
    </item>
    
    <item>
      <title>Getting Started with Apache Cassandra</title>
      <link>https://ebeid.github.io/blog/2013-07-09-getting-started-with-apache-cassandra.html/</link>
      <pubDate>Tue, 09 Jul 2013 17:27:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-09-getting-started-with-apache-cassandra.html/</guid>
      <description>Apache Cassandra is “an open source, distributed, decentralized, elastically scalable, highly available, fault-tolerant, tuneably consistent, column-oriented database that bases its distribution design on Amazon’s Dynamo and its data model on Google’s Bigtable” (source: “Cassandra: The Definitive Guide,” O’Reilly Media, 2010, p. 14).
Cassandra is built to store lots of data across a variety of machines arranged in a ring, in other words scaling horizontally, rather than vertically.
Data Model Cassandra is based on a key-value model and it is organized according to the following concepts:</description>
    </item>
    
    <item>
      <title>Redis 101– Part 2</title>
      <link>https://ebeid.github.io/blog/2013-07-03-redis-101-part-2.html/</link>
      <pubDate>Wed, 03 Jul 2013 12:47:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-03-redis-101-part-2.html/</guid>
      <description>We introduced many of the Redis’s fundamental concepts and commands in the last post. In this post we going to introduce some advanced features.
Publish-Subscribe Previously we queued data that could be read by a blocking pop command. Using that queue, we made a very basic publish-subscribe model. Any number of messages could be pushed to this queue, and a single queue reader would pop messages as they were available. This is powerful but limited.</description>
    </item>
    
    <item>
      <title>Running multiple Redis instances on the same server</title>
      <link>https://ebeid.github.io/blog/2013-07-02-running-multiple-redis-instances-on.html/</link>
      <pubDate>Tue, 02 Jul 2013 11:42:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-07-02-running-multiple-redis-instances-on.html/</guid>
      <description>Redis runs as a background process that listens to a specific port (6379 by default) for incoming requests from clients. Running multiple instances requires a separate conf file and a new init script. The conf file specifies details for the new instance, and the init script handles starting/stopping of the instance background process.
Make a copy of the redis.conf file at C:\Program Files\Redis\Conf and give it a new name redis-s1.conf. Leave both files in the same directory C:\Program Files\Redis\Conf</description>
    </item>
    
    <item>
      <title>Redis 101</title>
      <link>https://ebeid.github.io/blog/2013-06-26-redis-101.html/</link>
      <pubDate>Wed, 26 Jun 2013 15:29:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-06-26-redis-101.html/</guid>
      <description>Redis (REmote DIctionary Service) is an open-source networked in-memory key-value data store. First released in 2009, currently sponsored by VMware, and since then it have been ranked the most popular key-value store by DB-Engine. Redis creator Salvatore Sanfilippo refers to his project as a “data structure server” to capture its unique handling of complex data types and other features. Interested ? Enough talking, let’s get down to business.
Download Redis installer from here.</description>
    </item>
    
    <item>
      <title>Parameterized Test Patterns using Microsoft Pex</title>
      <link>https://ebeid.github.io/blog/2013-05-02-parameterized-test-patterns-using.html/</link>
      <pubDate>Thu, 02 May 2013 16:08:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-05-02-parameterized-test-patterns-using.html/</guid>
      <description>We talked before about the difference between unit tests and parameterized unit tests. In this post we will talk about common patterns for writing good parameterized unit tests. Keep in mind that we will use these tests with Microsoft Pex (as an automatic test input generation tool) to get test inputs that trigger all the possible scenarios of the code-under-test.
 Before anything, let’s clarify what are the questions we want to answer using the parameterized unit tests.</description>
    </item>
    
    <item>
      <title>Microsoft Pex: Understanding Assumptions, Assertions, and Test-Case Failures</title>
      <link>https://ebeid.github.io/blog/2013-04-29-microsoft-pex-understanding-assumptions.html/</link>
      <pubDate>Mon, 29 Apr 2013 15:00:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-04-29-microsoft-pex-understanding-assumptions.html/</guid>
      <description>In a previous post we started using Microsoft Pex and showed how it helped exploring all possible code paths, and how that helped discovering a defect in our program logic. In that example, even our program logic is defective, all test cases succeeded. A test case fails if there is an un-caught exception or a failed assertion.
To see an example of a failed test case and how Pex could help in fixing it, let’s add the following basic function to our code:</description>
    </item>
    
    <item>
      <title>Getting started with Microsoft Code Digger</title>
      <link>https://ebeid.github.io/blog/2013-04-26-getting-started-with-microsoft-code.html/</link>
      <pubDate>Fri, 26 Apr 2013 03:00:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-04-26-getting-started-with-microsoft-code.html/</guid>
      <description>Microsoft Code Digger is Visual Studio 2012 extension that have been released few days ago by RiSE team at Microsoft Research (the same team who developed Pex). You can download the it from the Visual Studio Gallery here.
Microsoft Code Digger uses the same engine that Pex uses, and the same techniques under the hood (dynamic symbolic execution and constraint solvers). The only constrain that Code Digger have is that it only works on public .</description>
    </item>
    
    <item>
      <title>Why Pex Choose These Inputs</title>
      <link>https://ebeid.github.io/blog/2013-04-25-why-pex-choose-these-inputs.html/</link>
      <pubDate>Thu, 25 Apr 2013 03:00:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-04-25-why-pex-choose-these-inputs.html/</guid>
      <description>In the example we gave in the previous post, it may seem that Pex chose random numbers as inputs for the Triang() method but it is not. But also its not all possible values for the inputs.
Actually, Pex generates test inputs by analyzing your program code, so it is called whitebox test generation (as opposed to blackbox test generation). For every statement in the code, Pex will eventually try to create a test input that will reach that statement.</description>
    </item>
    
    <item>
      <title>Getting started with Microsoft Pex</title>
      <link>https://ebeid.github.io/blog/2013-04-24-getting-started-with-microsoft-pex.html/</link>
      <pubDate>Wed, 24 Apr 2013 03:06:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-04-24-getting-started-with-microsoft-pex.html/</guid>
      <description>Microsoft Pex is a white box test generation for .NET that came out of Microsoft Research and have been successfully integrated into Visual Studio 2010. It have been a result of collaborative work between Microsoft Research and the Automated Software Engineering Research Group at North Carolina State University led by Dr. Tao Xie.
You can download and install Microsoft Pex for Visual Studio 2010 from here. We have talked in a previous post about parameterized unit tests and the possibilities it brings.</description>
    </item>
    
    <item>
      <title>Unit Tests vs Parametrized Unit Tests</title>
      <link>https://ebeid.github.io/blog/2013-04-22-unit-tests-vs-parameterized-unit-tests.html/</link>
      <pubDate>Mon, 22 Apr 2013 17:17:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-04-22-unit-tests-vs-parameterized-unit-tests.html/</guid>
      <description>Unit Tests Using the conventions of NUnit unit tests as test methods contained in test classes. A parameterless method decorated with a custom attribute like [TestMethod] is a test method. Usually, each unit test explores a particular aspect of the behavior of the class-under-test.
Here is a unit test written in C# that adds an element to a .NET ArrayList instance. The test first creates a new array list, where the parameter to the constructor is the initial capacity, then adds a new object to the array list, and finally checks that the addition was correctly performed by verifying that a subsequent index lookup operation returns the new object.</description>
    </item>
    
    <item>
      <title>Getting Started with Java PathFinder</title>
      <link>https://ebeid.github.io/blog/2013-03-30-getting-started-with-java-pathfinder.html/</link>
      <pubDate>Sat, 30 Mar 2013 19:06:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-03-30-getting-started-with-java-pathfinder.html/</guid>
      <description>Java™ Pathfinder, or &amp;ldquo;JPF&amp;rdquo; as we call it from here, is a highly customizable execution environment for verification of Java™ bytecode programs. JPF was developed at the NASA Ames Research Center, open sourced in 2005, and is freely available here under the NOSA 1.3 license. JPF started as a software model checker but it integrates model checking, program analysis and testing.
In this post we will go in a step by step process to setup the environment where Java Path Finder can be used within Eclipse IDE environment.</description>
    </item>
    
    <item>
      <title>Introduction to R – Charts and Graphics</title>
      <link>https://ebeid.github.io/blog/2013-01-21-introduction-to-r-charts-and-graphics.html/</link>
      <pubDate>Mon, 21 Jan 2013 09:40:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-21-introduction-to-r-charts-and-graphics.html/</guid>
      <description>R includes several packages for visualizing data:
 graphics contains plotting functions for the “base” graphing systems, including plot, hist, boxplot and many others. lattice contains code for producing Trellis graphics, which are independent of the “base” graphics system; including functions like xyplot, bwplot, levelplot. It built on grid which implements a different graphing system independent of the “base” system. grDevices contains all code implementing the various graphics devices, including X11, PDF, PostScript, PNG, etc.</description>
    </item>
    
    <item>
      <title>Introduction to R – Random Variables Generation &amp; Probability Distribution Functions</title>
      <link>https://ebeid.github.io/blog/2013-01-17-introduction-to-r-random-variables.html/</link>
      <pubDate>Thu, 17 Jan 2013 17:07:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-17-introduction-to-r-random-variables.html/</guid>
      <description>Simulation is important topic for statistical applications and scientific purposes in general.
Generating Random Numbers The first step in simulation is to generate random values based on your variables distribution. R has a large number of functions that generate the standard random variables.
for Normal random variable generationrnorm() simulate a simple random normal variable with a given mean and standard deviation and generate as many random values as requested.</description>
    </item>
    
    <item>
      <title>Introduction to R – Basic Debugging</title>
      <link>https://ebeid.github.io/blog/2013-01-16-introduction-to-r-basic-debugging.html/</link>
      <pubDate>Wed, 16 Jan 2013 17:38:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-16-introduction-to-r-basic-debugging.html/</guid>
      <description>In this post we will talk about native debugging support in R. Mostly, you start debugging when something goes wrong, which have many indications:
 message A generic notification/diagnostic message produced by the message function; execution of the function continues. warning An indication that something is wrong but not necessarily fatal; execution of the function continues; generated by the warning function; you got it after the function completion. error An indication that a fatal problem has occurred; execution stops; produced by the stop function.</description>
    </item>
    
    <item>
      <title>Introduction to R – Control Structures</title>
      <link>https://ebeid.github.io/blog/2013-01-15-introduction-to-r-control-structures.html/</link>
      <pubDate>Tue, 15 Jan 2013 16:43:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-15-introduction-to-r-control-structures.html/</guid>
      <description>Like every other programing language, R have control structures that allow you control the flow of your code execution.
If, else for testing a condition. else section is optional.

if it’s all about assigning a value to a variable, you can do like this

for for executing a loop for a fixed number of times. It takes a variable and assign it successive values from a sequence or vector.</description>
    </item>
    
    <item>
      <title>Introduction to R – Functions</title>
      <link>https://ebeid.github.io/blog/2013-01-13-introduction-to-r-functions.html/</link>
      <pubDate>Sun, 13 Jan 2013 14:42:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-13-introduction-to-r-functions.html/</guid>
      <description>Functions Functions are just like what you remember from math class. Most functions are in the following form: f(argument1, argument2, &amp;hellip;) Where f is the name of the function, and argument1, argument2, . . . are the arguments
to the function. Here are a few examples of built-in functions:
Note in the last example that if you give the argument in the default order, you can omit the names. Some built-in functions have operator form like the following examples:</description>
    </item>
    
    <item>
      <title>Introduction to R – Matrix Operations</title>
      <link>https://ebeid.github.io/blog/2013-01-12-introduction-to-r-matrix-operations.html/</link>
      <pubDate>Sat, 12 Jan 2013 13:53:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-12-introduction-to-r-matrix-operations.html/</guid>
      <description>Operations can be done on matrices in two fashions:
 Element-wise : where operations performed on corresponding elements in the matrices. Just use the desired operator.  
 Matrix-wise: where operations are performed on the whole matrices in the way you used to do in math. Use the desired operator between a couple of % %  
Stay tuned for more R notes.</description>
    </item>
    
    <item>
      <title>Introduction to R – Removing missing values</title>
      <link>https://ebeid.github.io/blog/2013-01-11-introduction-to-r-removing-missing.html/</link>
      <pubDate>Fri, 11 Jan 2013 13:53:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-11-introduction-to-r-removing-missing.html/</guid>
      <description>A common task in preparing you data is to remove missing values(NAs). One way to do that is to retrieve a vector of the missing values in your data, and then filter them out from your structure.

If you want to filter out the missing values from more than one vector , you can use complete.cases() to get the indices that contains good data in both vectors.

Here good will contain TRUE only for indices that hold good data in both vectors; FALSE otherwise.</description>
    </item>
    
    <item>
      <title>Introduction to R – Importing/Exporting Data to External Files</title>
      <link>https://ebeid.github.io/blog/2013-01-09-introduction-to-r-importingexporting.html/</link>
      <pubDate>Wed, 09 Jan 2013 17:56:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-09-introduction-to-r-importingexporting.html/</guid>
      <description>There are many functions that read/write data in R and export it files
read.table, read.csv for reading tabular data and return it in data frames from delimited files. read.csv is identical to read.table except that default separator is coma. There are so many arguments for these functions, the most commonly used arguments are:
 file : string –&amp;gt; file name or URL header : logical –&amp;gt; TRUE if the file first line is a header line, FALSE if first line is data.</description>
    </item>
    
    <item>
      <title>Introduction to R – Getting Started</title>
      <link>https://ebeid.github.io/blog/2013-01-09-introduction-to-r-getting-started.html/</link>
      <pubDate>Wed, 09 Jan 2013 10:19:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-09-introduction-to-r-getting-started.html/</guid>
      <description>R is an open source programming language and software environment for statistical computing and graphics. The R language is widely used among statisticians for developing statistical software and data analysis. R was created by Ross Ihakaand Robert Gentlemanat the University of Auckland, New Zealand, and now, R is developed by the R Development Core Team. To download R and install it on your computer, you can get it at the Comprehensive R Archive Network (http://cran.</description>
    </item>
    
    <item>
      <title>Basic statistics using Microsoft Excel</title>
      <link>https://ebeid.github.io/blog/2013-01-08-basic-statistics-using-microsoft-excel.html/</link>
      <pubDate>Tue, 08 Jan 2013 13:01:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2013-01-08-basic-statistics-using-microsoft-excel.html/</guid>
      <description>Microsoft Excel is a powerful software that have been used my end users and professionals for many years for various purposes. In this post we going to introduce basic statistical features of Excel. This post is using Microsoft Excel 2013, but it is easy to map it to your Excel version.
Basic Formulas Computations in Excel are carried out using formulas. A formula is a mathematical expression that is used to calculate a value.</description>
    </item>
    
    <item>
      <title>Microsoft Dynamics CRM 2011 for Developers | Plug-ins</title>
      <link>https://ebeid.github.io/blog/2012-03-23-microsoft-dynamics-crm-2011-for_23.html/</link>
      <pubDate>Fri, 23 Mar 2012 15:49:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2012-03-23-microsoft-dynamics-crm-2011-for_23.html/</guid>
      <description>Contents  Introduction Common Uses of Plug-ins Plug-ins Basics  Event Framework Event Execution Pipeline Pipeline Stages Message Processing Inclusion in Database Transactions  Plug-in Isolation Trusts   Develop Plug-ins Register Plug-ins  Introduction
A plug-in is .Net assembly that can be used to intercept events generated from the CRM system. Plug-ins subscribe to a set of events and run when the events occur regardless of how the event raised (or the method that is used to perform the activity that raised the event).</description>
    </item>
    
    <item>
      <title>Microsoft Dynamics CRM 2011 for Developers | Creating Custom Reports Using Microsoft SQL Server 2008 Reporting Services</title>
      <link>https://ebeid.github.io/blog/2012-03-13-microsoft-dynamics-crm-2011-for_14.html/</link>
      <pubDate>Tue, 13 Mar 2012 17:47:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2012-03-13-microsoft-dynamics-crm-2011-for_14.html/</guid>
      <description>Contents  Introduction Setup the Development Environment Report Development Process Create Custom Reports Using Business Intelligence Development Studio  Create a Custom SQL-Based Report Create a Custom Fetch-Based Report   Import Custom Reports into Dynamics CRM  Introduction
Microsoft Dynamics CRM provides many out-of-box reports for viewing business data. You can view a list of reports you have access to by navigating to Workplace &amp;gt; My Work &amp;gt; Reports. You can also see a list of all reports available by navigating to Settings &amp;gt; Customization &amp;gt; Customizations &amp;gt; Customize the System &amp;gt; Report [left navigation].</description>
    </item>
    
    <item>
      <title>Microsoft Dynamics CRM 2011 for Developers | Web Resources Part 1</title>
      <link>https://ebeid.github.io/blog/2012-03-11-microsoft-dynamics-crm-2011-for.html/</link>
      <pubDate>Sun, 11 Mar 2012 06:10:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2012-03-11-microsoft-dynamics-crm-2011-for.html/</guid>
      <description>Contents  Introduction Types of Web Resources Where can Web Resources be Used ? Web Resources Limitations Web Resources Management Using Web Resources on a Form Using Web Resources from the Form Navigation  Using Web Resources on a Dashboard Using Web Resources Direct from SiteMap  Using Web Resources as a Solution Configuration Page Referencing Other Web Resources  Introduction
Web resources are a new feature of Dynamics CRM 2011 that allows storing of client side content in the CRM server database in order to be used for extending the Dynamics CRM web application.</description>
    </item>
    
    <item>
      <title>Microsoft Dynamics CRM 2011 for Developers - Accessing Microsoft Dynamics CRM 2011 using WCF</title>
      <link>https://ebeid.github.io/blog/2012-03-02-accessing-microsoft-dynamics-crm-2011.html/</link>
      <pubDate>Fri, 02 Mar 2012 16:28:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2012-03-02-accessing-microsoft-dynamics-crm-2011.html/</guid>
      <description>Contents  Introduction Creating a client application Using the Discovery Service Using the Organization Service Working with CRM Data  Late Binding Approach  Using RetrieveMultiple method Using Retrieve method Using Update method Using Delete method Using Create method   Early binding Approach  generating Client Types Enable ProxyTypeBehavior Using RetrieveMultiple method Using Retrieve method Using Create method      Introduction Microsoft Dynamics CRM is a Customer Relationship Management software package developed to focus mainly on Sales, Marketing, and Service (help desk) sectors.</description>
    </item>
    
    <item>
      <title>JSON–yet another tutorial :)</title>
      <link>https://ebeid.github.io/blog/2011-12-01-jsonyet-another-tutorial.html/</link>
      <pubDate>Thu, 01 Dec 2011 17:43:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2011-12-01-jsonyet-another-tutorial.html/</guid>
      <description>What is JSON? JSON (or JavaScript Object Notation) is a highly portable data interchange format. While its structure is recognized natively by Javascript (as it is Javascript), its formatting conventions are easily recognized by other C-like languages.
JSON is built on two structures:
 A collection of name/value pairs. In various languages, this is realized as an object, record, struct, dictionary, hash table, keyed list, or associative array. Example:  var jason = { &amp;quot;age&amp;quot; : &amp;quot;28&amp;quot;, &amp;quot;hometown&amp;quot; : &amp;quot;Cairo, Egypt&amp;quot;, &amp;quot;gender&amp;quot; : &amp;quot;male&amp;quot; };   The object created in the example could be accessed like any other object.</description>
    </item>
    
    <item>
      <title>An introduction to Microsoft Message Queuing–Part 2</title>
      <link>https://ebeid.github.io/blog/2011-11-22-in-previous-post-we-explored-very-basic.html/</link>
      <pubDate>Tue, 22 Nov 2011 11:52:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2011-11-22-in-previous-post-we-explored-very-basic.html/</guid>
      <description>In the previous post, we explored very basic concepts of MSMQ. We used non-transactional queue to send and receive a message. In this post we will try to dive more into Message Queuing Queues.
Simply, queues are logical containers that Message Queuing uses to store and later forward messages, providing the bases for the loosely coupled aspects of Message Queuing. Queues can be created by applications and by Message Queuing. Queues created by applications or by users in an MMC snap-in are referred to as application queues.</description>
    </item>
    
    <item>
      <title>An introduction to Microsoft Message Queuing</title>
      <link>https://ebeid.github.io/blog/2011-11-17-introduction-to-microsoft-message.html/</link>
      <pubDate>Thu, 17 Nov 2011 06:49:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2011-11-17-introduction-to-microsoft-message.html/</guid>
      <description>What is MSMQ ? Message Queuing (also known as MSMQ) is a messaging infrastructure and a development tool for creating distributed messaging applications for Microsoft Windows operating systems. Applications developed for Message Queuing send messages to queues, which are temporary storage locations, from which messages can proceed to their final destination as conditions permit.
Installing MSMQ The procedures to install MSMQ on Windows Server 2008, Winows Server 2008 R2, Windows 7, Windows Vista, Windows XP, and Windows Server 2003 are available here</description>
    </item>
    
    <item>
      <title>Asserts in NUnit</title>
      <link>https://ebeid.github.io/blog/2011-10-21-asserts-in-nunit.html/</link>
      <pubDate>Fri, 21 Oct 2011 12:19:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2011-10-21-asserts-in-nunit.html/</guid>
      <description>Assertions (or asserts for short) are helper methods that can assist us in determining whether a method under test is performing correctly or not. They let us assert conditions, data, and so on. All assertion methods will report failures (that’s when the assertion is false) or errors (that’s when we get an unexpected exception) and report these through the NUnit test runner. when a failure or error occurs, execution of the current test method is aborted.</description>
    </item>
    
    <item>
      <title>Structuring unit tests in NUnit</title>
      <link>https://ebeid.github.io/blog/2011-10-21-structuring-unit-tests-in-nunit.html/</link>
      <pubDate>Fri, 21 Oct 2011 12:19:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2011-10-21-structuring-unit-tests-in-nunit.html/</guid>
      <description>Our goal in the previous post Introduction to NUnit, was just to introduce the unit testing using NUnit as simple as possible. Now it is the time to elaborate more on NUnit framework, structuring and organizing your test cases. If you examined the test code again:
 1: using System; 2: using NUnit.Framework; 3: namespace ClassLibrary1 4: { 5: [TestFixture] 6: public class CmpTest 7: { 8: [Test] 9: public void LargestOf3() 10: { 11: int[] numbers = new int[] { 8, 9, 7 }; 12: Assert.</description>
    </item>
    
    <item>
      <title>Introduction to NUnit</title>
      <link>https://ebeid.github.io/blog/2011-10-21-introduction-to-nunit.html/</link>
      <pubDate>Fri, 21 Oct 2011 12:17:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2011-10-21-introduction-to-nunit.html/</guid>
      <description>**What is unit testing?**According to Jeff Canna, unit testing ensures that a particular method of a class successfully performs a set of specific tasks. Each test confirms that a method produces the expected output when given a known input.
What is NUnit? NUnit is an open source framework that facilitates unit testing for all .NET languages. It allows you to build your test cases directly into the code of the project.</description>
    </item>
    
    <item>
      <title>Log4net Extended Tutorial</title>
      <link>https://ebeid.github.io/blog/2011-10-16-log4net-extended-tutorial.html/</link>
      <pubDate>Sun, 16 Oct 2011 21:48:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2011-10-16-log4net-extended-tutorial.html/</guid>
      <description>Logging is one of the most effective debugging and troubleshooting techniques although some engineers claim that it is not that helpful or it will slow the application. My experience with it is always positive.
I use log4net from the Apache Software Foundation as my logging layer for .Net applications. log4net is available here as a zip archive.
Hello World Example [uses BasicConfigurator]   Download log4net from here.
  Open Visual Studio and create a new Console application project.</description>
    </item>
    
    <item>
      <title>How I prepared for CSDP ?</title>
      <link>https://ebeid.github.io/blog/2010-12-27-how-i-prepared-for-csdp.html/</link>
      <pubDate>Mon, 27 Dec 2010 18:54:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2010-12-27-how-i-prepared-for-csdp.html/</guid>
      <description>After I became an IEEE Certified Software Development Professional, many of my friends asked me about it and how to prepare for it. As a CSDP holder, let me introduce CSDP for you and how I prepared for it.
The CSDP credential is intended for mid-career software development professionals that want to confirm their proficiency of standard software development practices and advance in their careers.
Who is eligible to take the CSDP?</description>
    </item>
    
    <item>
      <title>Business analysis &amp; Requirements Engineering Certifications</title>
      <link>https://ebeid.github.io/blog/2010-12-17-business-analysis-requirements.html/</link>
      <pubDate>Fri, 17 Dec 2010 08:02:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2010-12-17-business-analysis-requirements.html/</guid>
      <description>I was searching for certifications on requirements engineering and I found that there is a lot of mixing between business analysis and requirements engineering. This mix exists both on the daily use, professional certifications and organizations.
Starting by the definitions:
 Business analysis is the discipline of identifying business needs and determining solutions to business problems. Solutions often include a systems development component, but may also consist of process improvement, organizational change or strategic planning and policy development.</description>
    </item>
    
    <item>
      <title>How to educate the next generation of software engineers ?</title>
      <link>https://ebeid.github.io/blog/2010-09-01-how-to-educate-next-generation-of.html/</link>
      <pubDate>Wed, 01 Sep 2010 05:51:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2010-09-01-how-to-educate-next-generation-of.html/</guid>
      <description>After my completion of my master in software engineering at Nile University which we faced many problems at it (I hope it be better in the future), I tried to search for what globally constitutes a master of software engineering and I found the following:
 The last effort to create a reference curriculum for graduate software engineering education was by the SEI in the early 1990s. There were, in effect, no current community-endorsed recommendations on what to teach software engineers.</description>
    </item>
    
    <item>
      <title>SQL Server Metadata</title>
      <link>https://ebeid.github.io/blog/2010-04-11-sql-server-metadata.html/</link>
      <pubDate>Sun, 11 Apr 2010 11:44:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2010-04-11-sql-server-metadata.html/</guid>
      <description>Many times when you need to troubleshoot an SQL Server issue, you will need to collect metadata about the server, databases, and server resources in general. Here we will briefly review the mechanisms to collect these metadata.
System Base Tables SQL server maintains a set of tables that store information about all the objects, data types, constraints, configuration options, and resources available to SQL Server. These tables are called the system base tables.</description>
    </item>
    
    <item>
      <title>SQL Server Dedicated Administrator Connection</title>
      <link>https://ebeid.github.io/blog/2010-04-11-sql-server-dedicated-administrator.html/</link>
      <pubDate>Sun, 11 Apr 2010 05:08:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2010-04-11-sql-server-dedicated-administrator.html/</guid>
      <description>Microsoft SQL Server provides a dedicated administrator connection (DAC) which allows an administrator to access a running instance of SQL Server Database Engine to troubleshoot problems on the server—even when the server is unresponsive to other client connections. The DAC is available through the sqlcmd utility and SQL Server Management Studio. The connection is only allowed from a client running on the server. No network connections are permitted.
To use SQL Server Management Studio with the DAC, connect to an instance of the SQL Server Database Engine with Query Editor by typing ADMIN: before the server name.</description>
    </item>
    
    <item>
      <title>What is the SWEBOK Guide?</title>
      <link>https://ebeid.github.io/blog/2010-04-10-what-is-swebok-guide.html/</link>
      <pubDate>Sat, 10 Apr 2010 20:41:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2010-04-10-what-is-swebok-guide.html/</guid>
      <description># SWEBOK or Software Engineering Body Of Knowledge is an all-inclusive term that describes the sum of knowledge within the profession of software engineering. Since it is usually not possible to put the full body of knowledge of even an emerging discipline, such as software engineering, into a single document, there is a need for a Guide to the Software Engineering Body of Knowledge. This Guide will seek to identify and describe that subset of the body of knowledge that is generally accepted.</description>
    </item>
    
    <item>
      <title>I am Certified Software Development Professional CSDP</title>
      <link>https://ebeid.github.io/blog/2010-04-10-im-certified-software-development.html/</link>
      <pubDate>Sat, 10 Apr 2010 17:48:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2010-04-10-im-certified-software-development.html/</guid>
      <description>It is my pleasure to share with you my recent achievement. Now I’m IEEE Computer Society Certified Software Development Professional CSDP.
The CSDP credential is intended for mid-career software development professionals that want to confirm their proficiency of standard software development practices and advance in their careers.
Certified Software Development Professional should:
 Possesses fundamental knowledge and understanding of computing principles and concepts and their application to the definition, design, construction, testing of software.</description>
    </item>
    
    <item>
      <title>Bugs in the generated code of Repository Factory for Visual Studio 2008</title>
      <link>https://ebeid.github.io/blog/2010-03-26-bugs-in-generated-code-of-repository.html/</link>
      <pubDate>Fri, 26 Mar 2010 09:54:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2010-03-26-bugs-in-generated-code-of-repository.html/</guid>
      <description>If you are considering using repository factory for visual studio 2008 in your next project, please be aware that it had 2 bugs in code generation. These are in the generated Remove method in the repository classes of the DAL. This happens only if the corresponding table is a bridge table that links two tables together.
If you had simple three tables in your database like the following:

The generated Remove method in User_RoleRepository class will be like the following:</description>
    </item>
    
    <item>
      <title>Wisdom of Experts: Programming in vs. Programming into a language</title>
      <link>https://ebeid.github.io/blog/2009-08-26-wisdom-of-experts-programming-in-vs.html/</link>
      <pubDate>Wed, 26 Aug 2009 00:32:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-08-26-wisdom-of-experts-programming-in-vs.html/</guid>
      <description>David Gries (1981) pointed out that “your programming tools don’t have to determine how you think about programming”. He also made a distinction between programming in a language vs. programming into a language.
Programmers who program “in” a language limit their thoughts to constructs that the language directly supports. If the language tools are primitive, the programmers thoughts will be also be primitive.
Programmers who program “into” a language, first decide what thoughts they want to express, and then they determine how to express thoughts using the tools provided by their specific language.</description>
    </item>
    
    <item>
      <title>Using Python Scripts with IIS 7</title>
      <link>https://ebeid.github.io/blog/2009-08-15-using-python-scripts-with-iis-7.html/</link>
      <pubDate>Sat, 15 Aug 2009 00:31:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-08-15-using-python-scripts-with-iis-7.html/</guid>
      <description>Here are the steps you should make if you want to use python scripts on IIS 7:
 Please make sure Python is installed properly or refer to Python Notes – 1 : Setup for installation steps. Make sure CGI module is installed in IIS 7.  Control Panel -&amp;gt; Programs -&amp;gt; Program and Features -&amp;gt; Turn Windows features on and off -&amp;gt; Internet Information Services -&amp;gt; World Wide Web Services -&amp;gt; Application Development Features -&amp;gt; CGI module (Ensure that it is selected).</description>
    </item>
    
    <item>
      <title>Introduction to Peer-to-Peer Computing</title>
      <link>https://ebeid.github.io/blog/2009-05-24-introduction-to-peer-to-peer-computing.html/</link>
      <pubDate>Sun, 24 May 2009 23:10:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-05-24-introduction-to-peer-to-peer-computing.html/</guid>
      <description>Peer-to-peer (P2P) has become a buzzword that subsumes concepts used in communication technologies, distributed system models, applications, platforms, etc. It is not a particular initiative, nor architecture or specific technology; it rather describes a set of concepts and mechanisms for decentralized distributed computing and direct peer-to-peer information and data interchange.
So, What is Peer-to-Peer Computing ?
There is no one definition of P2P.
 P2P is a class of applications that takes advantages of resources available at the edges of the internet.</description>
    </item>
    
    <item>
      <title>Python Notes 14: Advanced Network Operations</title>
      <link>https://ebeid.github.io/blog/2009-05-15-python-notes-14-advanced-network.html/</link>
      <pubDate>Fri, 15 May 2009 21:07:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-05-15-python-notes-14-advanced-network.html/</guid>
      <description>We have explored the usual issues in network programming, both on client side and server side. In this post we will discuss some advanced topics in network programming.
Half-Open Sockets
Normally, sockets are bidirectional—data can be sent across them in both directions. Sometimes, you may want to make a socket be unidirectional so data can only be sent in one direction. A socket that&amp;rsquo;s unidirectional is said to be a half-open socket.</description>
    </item>
    
    <item>
      <title>Python Notes 13: Network servers</title>
      <link>https://ebeid.github.io/blog/2009-05-15-python-notes-13-network-servers.html/</link>
      <pubDate>Fri, 15 May 2009 18:38:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-05-15-python-notes-13-network-servers.html/</guid>
      <description>For a client, the process of establishing a TCP connection is a two-step process that includes the creation of the socket object and a call to connect() to establish a connection to the server. For a server, the process requires the following four steps:
 Create the socket object. Set the socket options (optional). Bind to a port (and, optionally, a specific network card). Listen for connections.  Example of these steps:</description>
    </item>
    
    <item>
      <title>Python Notes 12 : Network clients</title>
      <link>https://ebeid.github.io/blog/2009-05-15-python-notes-12-network-clients.html/</link>
      <pubDate>Fri, 15 May 2009 18:17:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-05-15-python-notes-12-network-clients.html/</guid>
      <description>After we have explored the basics of network programming in brief in the previous post, we will discuss network clients in more details in this post.
Understanding Sockets
Sockets are an extension to the operating system&amp;rsquo;s I/O system that enable communication between processes and machines. It can be treated the same as standard files, with the same interface methods so in many cases, a program need not know whether it&amp;rsquo;s writing data to a file, the terminal, or a TCP connection.</description>
    </item>
    
    <item>
      <title>Python Notes 11 : Introduction to Network Programming</title>
      <link>https://ebeid.github.io/blog/2009-05-15-python-notes-11-introduction-to-network.html/</link>
      <pubDate>Fri, 15 May 2009 03:00:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-05-15-python-notes-11-introduction-to-network.html/</guid>
      <description>Network Overview
Python provides a wide assortment of network support.
 Low-level programming with sockets (if you want to create a protocol). Support for existing network protocols (HTTP, FTP, SMTP, etc&amp;hellip;). Web programming (CGI scripting and HTTP servers). Data encoding  Network Basics: TCP/IP
Python’s networking modules primarily support TCP/IP.
 TCP - A reliable connection-oriented protocol (streams). UDP - An unreliable packet-oriented protocol (datagrams).  TCP is the most common (HTTP, FTP, SMTP, etc&amp;hellip;).</description>
    </item>
    
    <item>
      <title>Python Notes – 10 : Threading</title>
      <link>https://ebeid.github.io/blog/2009-03-28-python-notes-10.html/</link>
      <pubDate>Sat, 28 Mar 2009 07:55:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-28-python-notes-10.html/</guid>
      <description>Welcome to our tenth note in the Python learning process. In this note we will talk about threading, threads communication and synchronization.
Threads basics A running program is called a &amp;ldquo;process&amp;rdquo;. Each process has memory, list of open files, stack, program counter, etc…. Normally, a process executes statements in a single sequence of control-flow.
The following commands create an entirely new process: fork(),system(), popen(), etc… This child process runs independently of the parent.</description>
    </item>
    
    <item>
      <title>Python Notes – 9 : Serialization</title>
      <link>https://ebeid.github.io/blog/2009-03-27-python-notes-9.html/</link>
      <pubDate>Fri, 27 Mar 2009 01:53:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-27-python-notes-9.html/</guid>
      <description>Welcome to our ninth note in our Python learning process. We talked previously about files and how to handle it but we talked about writing and reading only the primitive data types as integers and strings. We also talked about objects and classes. Now, what if we want to write a compound data type or a complex object to a file. This note will talk about writing objects to files, which is called object serialization.</description>
    </item>
    
    <item>
      <title>Python Notes – 8 : Object-Oriented Basics</title>
      <link>https://ebeid.github.io/blog/2009-03-27-python-notes-8.html/</link>
      <pubDate>Fri, 27 Mar 2009 01:51:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-27-python-notes-8.html/</guid>
      <description>Welcome to our eighth note in our Python learning process. This note will talk about object oriented features in Python.
Classes and Objects A class definition looks like this:
 class Point:
   pass
 Class definitions can appear anywhere in a program, but they are usually near the beginning (after the import statements). By creating the Point class, we created a new type, also called Point. The members of this type are called instances of the type or objects.</description>
    </item>
    
    <item>
      <title>Python Notes – 7 : Files &amp; directories</title>
      <link>https://ebeid.github.io/blog/2009-03-23-python-notes-7.html/</link>
      <pubDate>Mon, 23 Mar 2009 10:12:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-23-python-notes-7.html/</guid>
      <description>Welcome to our seventh note in our Python learning process. This note will talk specifically about files, directories, and exceptions.
Files Opening a file creates a file object. Syntax is like that:
 &amp;gt;&amp;gt;&amp;gt; f = open(&amp;ldquo;test.dat&amp;rdquo;,&amp;ldquo;w&amp;rdquo;)  &amp;gt;&amp;gt;&amp;gt; print f  &amp;lt;open file &amp;lsquo;test.dat&amp;rsquo;, mode &amp;lsquo;w&amp;rsquo; at fe820&amp;gt; The first parameter to open is the file name, the second parameter is the mode. Modes are: w for write, r for read.</description>
    </item>
    
    <item>
      <title>Python Notes – 6 : Tuples &amp; Dictionaries</title>
      <link>https://ebeid.github.io/blog/2009-03-23-python-notes-6.html/</link>
      <pubDate>Mon, 23 Mar 2009 09:06:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-23-python-notes-6.html/</guid>
      <description>Welcome to our sixth note in our Python learning process. In this note we will talk about tuples and dictionaries.
Tuples Tuples are similar to lists but its elements can&amp;rsquo;t be modified. Syntactically, a tuple is a comma-separated list of values:
 &amp;gt;&amp;gt;&amp;gt; tuple = &amp;lsquo;a&amp;rsquo;, &amp;lsquo;b&amp;rsquo;, &amp;lsquo;c&amp;rsquo;, &amp;lsquo;d&amp;rsquo;, &amp;lsquo;e&amp;rsquo;
 Although it is not necessary, it is conventional to enclose tuples in parentheses:
 &amp;gt;&amp;gt;&amp;gt; tuple = (&amp;lsquo;a&amp;rsquo;, &amp;lsquo;b&amp;rsquo;, &amp;lsquo;c&amp;rsquo;, &amp;lsquo;d&amp;rsquo;, &amp;lsquo;e&amp;rsquo;)</description>
    </item>
    
    <item>
      <title>Python Notes – 5 : Objects &amp; Values</title>
      <link>https://ebeid.github.io/blog/2009-03-23-python-notes-5.html/</link>
      <pubDate>Mon, 23 Mar 2009 07:49:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-23-python-notes-5.html/</guid>
      <description>Welcome to our fifth note in our Python learning process. In this note we will talk about one of the core concepts of the Python language semantics .
Objects and Values
An object is something a variable can refer to. Every object has a unique identifier, which we can obtain with the id function.
 &amp;gt;&amp;gt;&amp;gt; a = &amp;ldquo;banana&amp;quot;  &amp;gt;&amp;gt;&amp;gt; b = &amp;ldquo;banana&amp;quot;  &amp;gt;&amp;gt;&amp;gt; id(a)  135044008  &amp;gt;&amp;gt;&amp;gt; id(b)  135044008 Interestingly, lists behave differently.</description>
    </item>
    
    <item>
      <title>Python Notes – 4 : Lists</title>
      <link>https://ebeid.github.io/blog/2009-03-23-python-notes-4.html/</link>
      <pubDate>Mon, 23 Mar 2009 05:13:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-23-python-notes-4.html/</guid>
      <description>Welcome to our third note in our Python learning process. In this note we will talk mainly about lists, its functions and how to use it.
Lists - Creation A list is an ordered set of values, where each value is identified by an index. The values that make up a list are called its elements. You could create it like:
 &amp;gt;&amp;gt;&amp;gt; X = [12, 56, 87]  &amp;gt;&amp;gt;&amp;gt; print X  [12, 56, 87]  &amp;gt;&amp;gt;&amp;gt; Y = [&amp;ldquo;one&amp;rdquo;, &amp;ldquo;three&amp;rdquo;, &amp;ldquo;five&amp;rdquo;]  &amp;gt;&amp;gt;&amp;gt; print Y  [&amp;ldquo;one&amp;rdquo;, &amp;ldquo;three&amp;rdquo;, &amp;ldquo;five&amp;rdquo;] The list elements don&amp;rsquo;t have to be the same type.</description>
    </item>
    
    <item>
      <title>Python Notes – 3 : Control Statements</title>
      <link>https://ebeid.github.io/blog/2009-03-19-python-notes-3.html/</link>
      <pubDate>Thu, 19 Mar 2009 08:59:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-19-python-notes-3.html/</guid>
      <description>Welcome to our third note in our Python learning process. In this note we will talk about conditional statements, iteration and keyboard input.
Conditional Statements The normal flow of statements execution is sequential where the interpreter executes the statements in the same sequence that it appears in the script. If your program logic requires a different flow than the that, you should use conditional statements. The syntax looks like:
 if x%2 == 0:  print x, &amp;ldquo;is even&amp;quot;  else:  print x, &amp;ldquo;is odd&amp;quot; The statement indentation is the only statement scope identifier.</description>
    </item>
    
    <item>
      <title>Python Notes – 2 : Variables, Statements, Expressions, Operators, and Functions</title>
      <link>https://ebeid.github.io/blog/2009-03-18-python-notes-2.html/</link>
      <pubDate>Wed, 18 Mar 2009 15:25:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-18-python-notes-2.html/</guid>
      <description>Welcome to our second note in our Python learning process. In this note we will talk about variables, statements, expressions, operators, comments, and functions. These are the very basic building blocks of you programs whatever its final size
Variables The assignment statement creates new variables and gives them values
 &amp;gt;&amp;gt;&amp;gt; message = &amp;ldquo;What&amp;rsquo;s up, Doc?&amp;rdquo;
  &amp;gt;&amp;gt;&amp;gt; n = 17
  &amp;gt;&amp;gt;&amp;gt; pi = 3.14159
 Python is a dynamically typed language.</description>
    </item>
    
    <item>
      <title>Python Notes – 1 : Setup</title>
      <link>https://ebeid.github.io/blog/2009-03-18-python-notes-1.html/</link>
      <pubDate>Wed, 18 Mar 2009 08:55:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-18-python-notes-1.html/</guid>
      <description>I write this notes about Python during my learning process of it. I&amp;rsquo;m not an expert in Python. I&amp;rsquo;m just writing this notes while I learn Python aiming to help others who are learning it too. Never hesitate to comment on anything you want.
Origins of Python  Developed by Guido van Rossum. Derived from ABC, a teaching language that was developed in 1980s.  Why Pyhton ?  Python code is pretty simple, compact and easy to learn.</description>
    </item>
    
    <item>
      <title>Type checking in programming languages</title>
      <link>https://ebeid.github.io/blog/2009-03-04-type-checking-in-programming-languages.html/</link>
      <pubDate>Wed, 04 Mar 2009 08:44:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-03-04-type-checking-in-programming-languages.html/</guid>
      <description>To discuss type checking in programming languages we have to define type checking. Simply,Type checking is how type errors are checked.
Type checking could happen at compile-time or at run-time. When type checking happens at the compile-time it is called Static Type Checking. When type checking happens at the run-time it is called Dynamic Type Checking.
Programming Languages differs in
 when they check types. Were it enforces types or not.</description>
    </item>
    
    <item>
      <title>Introduction to Mining Software Engineering Data</title>
      <link>https://ebeid.github.io/blog/2009-02-26-introduction-to-mining-software.html/</link>
      <pubDate>Thu, 26 Feb 2009 08:55:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-02-26-introduction-to-mining-software.html/</guid>
      <description>Tao Xie | North Carolina State University | xie@csc.ncsu.edu
Ahmed E. Hassan | University of Victoria | ahmed@uvic.ca
Part I
Mining Software Engineering Data goals:
 Transform static record-keeping SE data to active data. Make SE data actionable by uncovering hidden patterns and trends.  Uses of mining SE data:
 Gain empirically-based understanding of software development. Predict, plan, and understand various aspects of a project. Support future development and project management activities.</description>
    </item>
    
    <item>
      <title>Center of Innovation &amp; Competitiveness (INCOM) - Nile University</title>
      <link>https://ebeid.github.io/blog/2009-02-22-center-of-innovation-competitiveness.html/</link>
      <pubDate>Sun, 22 Feb 2009 03:51:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-02-22-center-of-innovation-competitiveness.html/</guid>
      <description>Nile University Center for Innovation and Competitiveness (NU/INCOM) is primarily focused on identifying, researching and promoting innovation practices that have improved competitiveness at the company, industry and country levels, with special emphasis on Egypt and the MENA region. Innovation is one of the most important competitive priorities in firms and in nations, and it is a major driving force for change in today&amp;rsquo;s world. It is critical in the formulation of successful manufactoring strategies for nations, at the micro and macro levels, and in enhancing their economic development and global market positioning.</description>
    </item>
    
    <item>
      <title>Bug Counts vs. Test Coverage</title>
      <link>https://ebeid.github.io/blog/2009-02-05-bug-counts-vs-test-coverage.html/</link>
      <pubDate>Thu, 05 Feb 2009 05:31:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-02-05-bug-counts-vs-test-coverage.html/</guid>
      <description>**What to Do When Bug Counts Don’t Speak for Themselves?**Bug counts on a project speak volumes about the quality of testing for a particular product and how vigorous the test team is working to &amp;ldquo;assure quality.&amp;rdquo; Bug counts are invariably a primary area of test metrics that are reported to management. What is the rationale behind drawing so much attention to the number of bugs being found through the course of a project?</description>
    </item>
    
    <item>
      <title>7 Habits of Highly Insecure Software</title>
      <link>https://ebeid.github.io/blog/2009-02-05-7-habits-of-highly-insecure-software.html/</link>
      <pubDate>Thu, 05 Feb 2009 05:22:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2009-02-05-7-habits-of-highly-insecure-software.html/</guid>
      <description>Habit # 1: Poorly Constrained Input By far, the number one cause of security vulnerabilities in software stems from the failure to properly constrain input. The most infamous security vulnerability resulting from this habit is the buffer overflow. Buffer overflows happen when application developers use languages (like C and C++) that allow them to allocate a fixed amount of memory to hold some user-supplied data. This usually doesn’t present a problem when input is properly constrained or when input strings are of the length that developers expected.</description>
    </item>
    
    <item>
      <title>ICT Centers in Egypt</title>
      <link>https://ebeid.github.io/blog/2008-12-01-ict-centers-in-egypt.html/</link>
      <pubDate>Mon, 01 Dec 2008 05:27:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2008-12-01-ict-centers-in-egypt.html/</guid>
      <description>I have wondered so many times. Do we have research and development centers for the IT industry in Egypt ?
Then question become wider; what are the ICT centers do we have in Egypt ?
During my search and my experince I have found many centers in egypt working in relation to the communications and Information Technology.
And here what I got:
· Data Mining and Computer Modeling Center[MCIT]
· Wireless Communication and Electronic Design Center[MCIT]</description>
    </item>
    
    <item>
      <title>What Great .NET Developers Ought To Know Answers</title>
      <link>https://ebeid.github.io/blog/2008-07-22-what-great-net-developers-ought-to-know.html/</link>
      <pubDate>Tue, 22 Jul 2008 11:04:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2008-07-22-what-great-net-developers-ought-to-know.html/</guid>
      <description>Everyone who writes code  Describe the difference between a Thread and a Process? What is a Windows Service and how does its lifecycle differ from a &amp;ldquo;standard&amp;rdquo; EXE? What is the maximum amount of memory any single process on Windows can address? Is this different than the maximum virtual memory for the system? How would this affect a system design? What is the difference between an EXE and a DLL?</description>
    </item>
    
    <item>
      <title>I’m a software engineer</title>
      <link>https://ebeid.github.io/blog/2008-07-13-im-software-engineer.html/</link>
      <pubDate>Sun, 13 Jul 2008 04:32:00 -0500</pubDate>
      
      <guid>https://ebeid.github.io/blog/2008-07-13-im-software-engineer.html/</guid>
      <description>A guy was crossing a road one day when a frog called out to him and said, “If you kiss me, I’ll turn into a beautiful princess.” He bent over, picked up the frog and put it in his pocket. The frog spoke up again and said, “If you kiss me and turn me back into a beautiful princess, I will stay with you for a week.” The guy took the frog out of his pocket, smiled at it and returned it to his pocket.</description>
    </item>
    
    <item>
      <title>Software engineers self-development</title>
      <link>https://ebeid.github.io/blog/2008-02-04-software-engineers-self-development.html/</link>
      <pubDate>Mon, 04 Feb 2008 04:11:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2008-02-04-software-engineers-self-development.html/</guid>
      <description>When I was in faculty my image about my future was that I will be a software developer in some company. I think it was the image of the most of us. But most of who work in software development when hired, find that the job title is software engineer (I talk about other job roles in undergraduates vision about their future).
Fresh graduates when hired have different reactions about this new job title which was not in their mind during the faculty.</description>
    </item>
    
    <item>
      <title>Data Mining &amp; Software Engineering</title>
      <link>https://ebeid.github.io/blog/2008-02-04-data-mining-software-engineering.html/</link>
      <pubDate>Mon, 04 Feb 2008 01:18:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2008-02-04-data-mining-software-engineering.html/</guid>
      <description>So many efforts have been done in data mining field from thousands of researchers and developers both in academia and enterprise. This can be rationale due to the following reasons:
 The vast ways in collecting and storing data in all aspects of life.
The huge data collected in the enterprise lead to overwhelming information workers.
This lead to one fact, which is “We rich in data but poor in information”.</description>
    </item>
    
    <item>
      <title>Software Development Process Automation</title>
      <link>https://ebeid.github.io/blog/2008-02-03-software-development-process-automation.html/</link>
      <pubDate>Sun, 03 Feb 2008 02:48:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2008-02-03-software-development-process-automation.html/</guid>
      <description>Few days ago I attended a session here in ITWorx called Engineering Processes. It was a very good session by an excellent speaker Alyaa Ali from the process improvement team.
I confess that before the session I wasn’t know enough and clear information of the CMMi and its parts and how we apply it, which have changed – thanks for Alyaa – after attending this great session.
But what I want to talk about now is a different thing.</description>
    </item>
    
    <item>
      <title>The birth of a new blogger</title>
      <link>https://ebeid.github.io/blog/2008-02-01-birth-of-new-blogger/</link>
      <pubDate>Fri, 01 Feb 2008 13:54:00 -0600</pubDate>
      
      <guid>https://ebeid.github.io/blog/2008-02-01-birth-of-new-blogger/</guid>
      <description>This is my first blog post, and I have many things to say but I will talk about one thing which is how this blog have started
But before that let me confess that I have different ideas about blogs in all.
These ideas have been accumulated over the time and extremely affected by the blogs that I have seen and read in my daily internet use.
These ideas can be summarized into few points:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ebeid.github.io/blog/creating-a-new-theme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ebeid.github.io/blog/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ebeid.github.io/blog/goisforlovers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ebeid.github.io/blog/goisforlovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ebeid.github.io/blog/hugoisforlovers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ebeid.github.io/blog/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title></title>
      <link>https://ebeid.github.io/blog/migrate-from-jekyll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ebeid.github.io/blog/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
  </channel>
</rss>
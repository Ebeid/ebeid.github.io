<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Z3 on </title>
    <link>http://localhost:1313/tags/z3/</link>
    <description>Recent content in Z3 on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 01 Aug 2013 16:24:00 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/z3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Convert Microsoft Pex path conditions from Z3 native format to SMT-LIB</title>
      <link>http://localhost:1313/2013/08/convert-microsoft-pex-path-conditions.html</link>
      <pubDate>Thu, 01 Aug 2013 16:24:00 -0500</pubDate>
      <guid>http://localhost:1313/2013/08/convert-microsoft-pex-path-conditions.html</guid>
      <description>&lt;p&gt;We talked before about &lt;a href=&#34;http://ebeid-soliman.blogspot.com/2013/07/get-path-conditions-from-microsoft-pex.html&#34; title=&#34;Get path conditions from Microsoft Pex&#34;&gt;getting the code path conditions from Microsoft Pex&lt;/a&gt; as in &lt;a href=&#34;http://research.microsoft.com/en-us/um/redmond/projects/z3/old/index.html&#34; title=&#34;Z3 : An Efficient Theorem Prover&#34;&gt;Z3&lt;/a&gt; native format(.z3 file).&lt;/p&gt;&#xA;&lt;p&gt;Sometimes you may need to convert from Z3 native format to &lt;a href=&#34;http://www.smt-lib.org/&#34; title=&#34;SMT-LIB The Satisfiability Modulo Theories Library&#34;&gt;SMT-LIB&lt;/a&gt; standard. You can do that using the &lt;a href=&#34;http://ebeid-soliman.blogspot.com/2013/07/the-z3-constraint-solver-developer.html&#34; title=&#34;The Z3 Constraint Solver, a developer perspective&#34;&gt;Z3 C# APIs&lt;/a&gt;. The only trick here is: you have to use the Microsoft.Z3.dll that come with your current Microsoft Pex installation (C:\Program Files\Microsoft Pex\bin\Microsoft.Z3.dll).&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Z3 Constraint Solver, a developer perspective</title>
      <link>http://localhost:1313/2013/07/the-z3-constraint-solver-developer.html</link>
      <pubDate>Tue, 30 Jul 2013 06:30:00 -0500</pubDate>
      <guid>http://localhost:1313/2013/07/the-z3-constraint-solver-developer.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://research.microsoft.com/en-us/um/redmond/projects/z3/old/&#34; title=&#34;Z3 : An Efficient Theorem Prover&#34;&gt;Z3&lt;/a&gt; is a high-performance SMT solver developed at &lt;a href=&#34;http://research.microsoft.com/en-us/&#34; title=&#34;Microsoft Research&#34;&gt;Microsoft Research&lt;/a&gt;. It have been integrated with many many tools that came out from Microsoft for program analysis, testing, and verification.&lt;/p&gt;&#xA;&lt;h4 id=&#34;what-sat-means-&#34;&gt;What SAT means ?&lt;/h4&gt;&#xA;&lt;p&gt;SAT refers to Boolean satisfiability problem where we want to determine if there exists an interpretation that satisfies a given Boolean formula. In other words, it establishes if the variables of a given Boolean formula can be assigned in such a way as to make the formula evaluate to true.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Get path conditions from Microsoft Pex</title>
      <link>http://localhost:1313/2013/07/get-path-conditions-from-microsoft-pex.html</link>
      <pubDate>Wed, 24 Jul 2013 17:26:00 -0500</pubDate>
      <guid>http://localhost:1313/2013/07/get-path-conditions-from-microsoft-pex.html</guid>
      <description>&lt;p&gt;We talked in a previous &lt;a href=&#34;http://ebeid-soliman.blogspot.com/2013/04/why-pex-choose-these-inputs.html&#34; title=&#34;Why Pex Choose These Inputs&#34;&gt;post&lt;/a&gt; about Microsoft Pex and how it choose values to explore your code through symbolically executing it and getting all its paths. A code path is the represented by all the conditions that have to be satisfied in order to make the code execution go to this path. Your code conditional statements will lead to different paths according to different input values. Test cases generated by Pex represents the code behavior for specific input values that lead to specific code path.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

---
layout: post
title: Getting started with AngularJS
date: '2014-01-01T12:34:00.001-06:00'
author: Ebeid Soliman ElSayed
tags: 
modified_time: '2014-04-09T17:26:11.857-05:00'
blogger_id: tag:blogger.com,1999:blog-59384554657271185.post-4874048310523727369
---

<p>As all developers know, and even non-developers, HTML is great for declaring documents, but it canâ€™t handle the dynamic nature of web applications. This brings us to the sole purpose of JavaScript, adding dynamic behavior to HTML documents to turn it into applications. Modern JavaScript frameworks including Backbone, Knockout, AngularJS, and others have brought a level of maturity and sophistication to the creation of HTML-based rich web applications that has been sorely needed. Although differing greatly in their approaches, these frameworks share a common goal: make it simpler for developers to build robust applications with HTML, CSS, and JavaScript.</p> <p><a href="http://angularjs.org/" target="_blank">AngularJS</a> framework by Google lets you extend HTML vocabulary in order to allow dynamic views (beside other stuff) to your application.</p> <h1>Hello World!</h1> <p>In pure HTML Hello World! example would look like this:</p><pre class="prettyprint lang-html"><br /><! doctype html><br /><html><br /><head><br /><br /><h2> Hello Ebeid!</h2><br /><br /><br /><br /><br /></pre><br /><p>What if you want to add some dynamic behavior to this HTML document? like when a user enter his name in textbox input field, the document shows his name in the greeting. JQuery, one of the most popular JavaScript frameworks, and AngularJS can help us add this dynamic behavior to the HTML document. Let's see first how JQuery do it: </p><pre class="prettyprint lang-html"><! doctype html><br /><html><br /><head><br />	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script><br />	<script type="text/javascript"><br />	$(function () {<br />		var name = $('#name');<br />		var greeting = $('#greeting');<br />		name.keyup(function () {<br />			greeting.text('Hello ' + name.val() + '!');<br />			})<br />		})<br />	</script><br /><br /><br />	<input id="name"><br />	<h2 id="greeting"></h2><br /><br /><br /><br /></pre><br /><p>Now let's see how AngularJS do it: </p><pre class="prettyprint lang-html"><! doctype html><br /><html ng-app><br /><head><br />	<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.2.6/angular.min.js"></script><br /><br /><br />	<input ng-model="name"><br />	<h2>Hello {{ "{{" }}name}}!</h2><br /><br /><br /></pre><br /><p>The main difference in AngularJS method is, instead of traversing the DOM to get the name value and the then update the greeting, we just create a model to hold the name and then bind the greeting to it. </p><br /><p>The AngularJS philosophy</p>  
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on </title>
    <link>http://localhost:1313/tags/redis/</link>
    <description>Recent content in Redis on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 03 Jul 2013 12:47:00 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis 101– Part 2</title>
      <link>http://localhost:1313/2013/07/redis-101-part-2.html</link>
      <pubDate>Wed, 03 Jul 2013 12:47:00 -0500</pubDate>
      <guid>http://localhost:1313/2013/07/redis-101-part-2.html</guid>
      <description>&lt;p&gt;We introduced many of the &lt;a href=&#34;http://redis.io/&#34; title=&#34;Redis&#34;&gt;Redis&lt;/a&gt;’s fundamental concepts and commands in the last post. In this post we going to introduce some advanced features.&lt;/p&gt;&#xA;&lt;h4 id=&#34;publish-subscribe&#34;&gt;Publish-Subscribe&lt;/h4&gt;&#xA;&lt;p&gt;Previously we queued data that could be read by a blocking pop command. Using that queue, we made a very basic publish-subscribe model. Any number of messages could be pushed to this queue, and a single queue reader would pop messages as they were available. This is powerful but limited. Redis provides some specialized publish-subscribe (or pub-sub) commands.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running multiple Redis instances on the same server</title>
      <link>http://localhost:1313/2013/07/running-multiple-redis-instances-on.html</link>
      <pubDate>Tue, 02 Jul 2013 11:42:00 -0500</pubDate>
      <guid>http://localhost:1313/2013/07/running-multiple-redis-instances-on.html</guid>
      <description>&lt;p&gt;Redis runs as a background process that listens to a specific port (6379 by default) for incoming requests from clients. Running multiple instances requires a separate conf file and a new init script. The conf file specifies details for the new instance, and the init script handles starting/stopping of the instance background process.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Make a copy of the &lt;a href=&#34;http://redis.io/&#34; title=&#34;Redis&#34;&gt;redis&lt;/a&gt;.conf file at C:\Program Files\Redis\Conf and give it a new name redis-s1.conf. Leave both files in the same directory C:\Program Files\Redis\Conf&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis 101</title>
      <link>http://localhost:1313/2013/06/redis-101.html</link>
      <pubDate>Wed, 26 Jun 2013 15:29:00 -0500</pubDate>
      <guid>http://localhost:1313/2013/06/redis-101.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://redis.io/&#34; title=&#34;Redis&#34;&gt;Redis&lt;/a&gt; (REmote DIctionary Service) is an open-source networked in-memory key-value data store. First released in 2009, currently sponsored by &lt;a href=&#34;http://www.vmware.com/&#34;&gt;VMware&lt;/a&gt;, and since then it have been ranked &lt;a href=&#34;http://db-engines.com/en/ranking/key-value+store&#34; title=&#34;DB-Engines Ranking of Key-value Stores&#34;&gt;the most popular key-value store by DB-Engine&lt;/a&gt;. Redis creator &lt;a href=&#34;http://invece.org/&#34; title=&#34;Salvatore Sanfilippo aka antirez&#34;&gt;Salvatore Sanfilippo&lt;/a&gt; refers to his project as a “data structure server” to capture its unique handling of complex data types and other features. Interested ? Enough talking, let’s get down to business.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
